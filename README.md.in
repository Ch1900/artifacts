artifacts
=========

Travis CI Artifact thingy

# Installation

There are pre-built binaries of the latest stable build for 64-bit
Linux, OSX, and Windows available here via the following links.  Please
note that the tests run on 64-bit Linux.

* [download for 64-bit Linux](https://s3.amazonaws.com/meatballhat/artifacts/stable/build/linux/amd64/artifacts)
* [download for 64-bit OSX](https://s3.amazonaws.com/meatballhat/artifacts/stable/build/darwin/amd64/artifacts)
* [download for 64-bit Windows](https://s3.amazonaws.com/meatballhat/artifacts/stable/build/windows/amd64/artifacts)

There is also an [install script](./install) for Linux and OSX that may
be used like so:

``` bash
curl -sL https://raw.githubusercontent.com/meatballhat/artifacts/master/install | bash
```

Once the binary is in your `$PATH` and has been made executable, you
will have access to the help system via `artifacts help`:

___USAGE___

## upload

The upload commmand may be used to upload arbitrary files to an artifact
repository.  The only such artifact repository currently supported is
S3.  All of the required arguments may be provided as command line
arguments or environment variables.

___UPLOAD_USAGE___

### S3 ENVIRONMENT COMPATIBILITY

In addition to the environmental variables listed above for defining the
access key, secret, and bucket, some additional variables will also work.

#### environmental variables accepted for "key"

0. `ARTIFACTS_KEY`
0. `ARTIFACTS_AWS_ACCESS_KEY`
0. `AWS_ACCESS_KEY_ID`
0. `AWS_ACCESS_KEY`

#### environmental variables accepted for "secret"

0. `ARTIFACTS_SECRET`
0. `ARTIFACTS_AWS_SECRET_KEY`
0. `AWS_SECRET_ACCESS_KEY`
0. `AWS_SECRET_KEY`

#### environmental variables accepted for "bucket"

0. `ARTIFACTS_BUCKET`
0. `ARTIFACTS_S3_BUCKET`


### EXAMPLES

#### Example: logs and coverage

In this case, the key and secret are passed as command line flags and
the `log/` and `coverage/` directories are passed as positional path
arguments:

``` bash
artifacts upload \
  --key AKIT339AFIY655O3Q9DZ \
  --secret 48TmqyraUyJ7Efpegi6Lfd10yUskAMB0G2TtRCX1 \
  --bucket my-fancy-bucket \
  log/ coverage/
```

The same operation using environmental variables would look like this:

``` bash
export ARTIFACTS_KEY="AKIT339AFIY655O3Q9DZ"
export ARTIFACTS_SECRET="48TmqyraUyJ7Efpegi6Lfd10yUskAMB0G2TtRCX1"
export ARTIFACTS_BUCKET="my-fancy-bucket"
export ARTIFACTS_PATHS="log/:coverage/"

artifacts upload
```

#### Example: untracked files

In order to upload all of the untracked files (according to git), one
might do this:

``` bash
artifacts upload \
  --key AKIT339AFIY655O3Q9DZ \
  --secret 48TmqyraUyJ7Efpegi6Lfd10yUskAMB0G2TtRCX1 \
  --bucket my-fancy-bucket \
  $(git ls-files -o)
```

The same operation using environmental variables would look like this:

``` bash
export ARTIFACTS_KEY="AKIT339AFIY655O3Q9DZ"
export ARTIFACTS_SECRET="48TmqyraUyJ7Efpegi6Lfd10yUskAMB0G2TtRCX1"
export ARTIFACTS_BUCKET="my-fancy-bucket"
export ARTIFACTS_PATHS="$(git ls-files -o | tr "\n" ":")"

artifacts upload
```

#### Example: multiple target paths

Specifying one or more custom target path will override the default of
`artifacts/$TRAVIS_BUILD_NUMBER/$TRAVIS_JOB_NUMBER`.  Multiple target paths
must be specified in ':'-delimited strings:

``` bash
artifacts upload \
  --key AKIT339AFIY655O3Q9DZ \
  --secret 48TmqyraUyJ7Efpegi6Lfd10yUskAMB0G2TtRCX1 \
  --bucket my-fancy-bucket \
  --target-paths "artifacts/$TRAVIS_REPO_SLUG/$TRAVIS_BUILD_NUMBER/$TRAVIS_JOB_NUMBER:artifacts/$TRAVIS_REPO_SLUG/$TRAVIS_COMMIT" \
  $(git ls-files -o)
```

The same operation using environmental variables would look like this:

``` bash
export ARTIFACTS_TARGET_PATHS="artifacts/$TRAVIS_REPO_SLUG/$TRAVIS_BUILD_NUMBER/$TRAVIS_JOB_NUMBER:artifacts/$TRAVIS_REPO_SLUG/$TRAVIS_COMMIT"
export ARTIFACTS_KEY="AKIT339AFIY655O3Q9DZ"
export ARTIFACTS_SECRET="48TmqyraUyJ7Efpegi6Lfd10yUskAMB0G2TtRCX1"
export ARTIFACTS_BUCKET="my-fancy-bucket"
export ARTIFACTS_PATHS="$(git ls-files -o | tr "\n" ":")"

artifacts upload
```
